@model jtf_Project.Admin.Models.ViewModels.UserProfileVModel
@{
    ViewBag.Title = "MyProfile";

    bool isEmailDisabled = !string.IsNullOrEmpty(Model.Id) ? true : false;
}

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="nav-tabs-custom" style="min-height:500px;">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#profileTab" data-toggle="tab"><i class="fa fa-male"></i> Profile</a></li>
                    <li><a href="#accountTab" data-toggle="tab"><i class="fa fa-user"></i> Account</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="profileTab">
                        <div class="row">
                            @using (Html.BeginForm("MyProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", id = "myProfileForm" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.Id)
                                @Html.HiddenFor(m => m.ProfileId)
                                @Html.HiddenFor(m => m.Profile.ImageId)
                                @Html.HiddenFor(m => m.Roles)
                                
                                <div class="col-md-3">
                                    <div class="col-md-12">
                                        <br />
                                        <div class="form-group clearfix">
                                            <span><strong><i class="fa fa-camera"></i> Photo</strong></span>
                                            <div class="kv-avatar center-block" style="width:100%;">
                                                <input id="UserPhoto" name="UserPhoto" data-imgpath="@Model.Profile.UserImage.ImageLocation" type="file" class="">
                                            </div>
                                            <div id="kv-avatar-errors" class="center-block" style="display:none"></div>
                                        </div>
                                    </div>
                                    <div class="col-xs-12">
                                        <strong><i class="fa fa-map-marker margin-r-5"></i> Location</strong>
                                        <p></p>
                                        <div id="googleMap" class="col-md-12 shadow-box" style="height:200px;"></div>
                                        <hr>
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div id="responseDiv"></div>

                                    <div class="col-md-10">
                                        <div class="container-fluid">
                                            <h2>@Model.Profile.FullName</h2>
                                            <p><i class="fa fa-briefcase"></i> @Model.Roles</p>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @if (isEmailDisabled)
                                                    {
                                                        <input type="text" class="form-control" value="@Model.Email" disabled />
                                                        @Html.HiddenFor(m => m.Email)
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                                    }

                                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Profile.FirstName, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @Html.TextBoxFor(m => m.Profile.FirstName, new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(m => m.Profile.FirstName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Profile.MiddleName, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @Html.TextBoxFor(m => m.Profile.MiddleName, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.Profile.MiddleName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Profile.LastName, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @Html.TextBoxFor(m => m.Profile.LastName, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.Profile.LastName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ContactNumber, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.ContactNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Profile.Gender, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @Html.DropDownListFor(m => m.Profile.Gender, Model.Profile.GenderSelectlist, string.Empty, new { @class = "form-control chosen-select" })
                                                    @Html.ValidationMessageFor(m => m.Profile.Gender, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Profile.BirthDate, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @Html.TextBoxFor(m => m.Profile.BirthDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
                                                    @Html.ValidationMessageFor(m => m.Profile.BirthDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Profile.Address, new { @class = "col-md-3 control-label" })
                                                <div class="col-md-9">
                                                    @Html.TextAreaFor(m => m.Profile.Address, 5, 4, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.Profile.Address, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        @Html.Partial("_GenericButtons")
                                    </div>
                                </div>
                            }
                        </div>
                    </div><!-- /.tab-pane -->
                    <div class="tab-pane" id="accountTab">
                        <div class="col-md-8" id="account-tab-content">
                            @Html.Action("ChangePassword", "Manage")

                            @Html.Partial("_GenericButtons")
                        </div>
                    </div><!-- /.tab-pane -->
                </div><!-- /.tab-content -->
            </div>
        </div>
    </div>
</section>



@section styles{
    <link href="~/Content/plugins/chosen-bootstrap/bootstrap-chosen.css" rel="stylesheet" />
    <link href="~/Content/plugins/iCheck/flat/blue.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-fileinput/css/fileinput.min.css" rel="stylesheet" />

    <style>
        .kv-avatar .file-preview-frame, .kv-avatar .file-preview-frame:hover {
            margin: 0;
            padding: 0;
            border: none;
            box-shadow: none;
            text-align: center;
        }

        .kv-avatar .file-input {
            display: table-cell;
            max-width: 220px;
        }

        .shadow-box{
            box-shadow: 0px 0px 10px 0px rgba(172, 156, 156, 0.7);
            -moz-box-shadow: 0px 0px 10px 0px rgba(172, 156, 156, 0.7);
            -webkit-box-shadow: 0px 0px 10px 0px rgba(172, 156, 156, 0.7);
        }
    </style>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/canvas-to-blob.min.js"></script>
    <script src="~/Content/plugins/chosen-bootstrap/chosen.jquery.min.js"></script>
    <script src="~/Content/plugins/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/fileinput.min.js"></script>
    <script src="~/Content/plugins/datepicker/bootstrap-datepicker.js"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js"></script>
    <script src="~/Scripts/App/account-myprofile.js"></script>
}